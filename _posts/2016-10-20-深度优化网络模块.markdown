---
layout: post
title:  "深度优化网络模块"
date:   2016-10-20 13:44:32
categories: iOS 
---
转载“MrPeak技术分享” 博客地址http://mrpeak.cn/

[深度优化iOS网络模块](http://mrpeak.cn/blog/ios-network/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)

* DNS映射
  无论是HTTP还是Socket长连接，第一步都是DNS解析。域名根据层级「主机名.次级域名.顶级域名.根域名」去解析，每一级缓存生命周期不同。在iOS设备上几乎每次断网重连，重启设备都会使DNS缓存失效，触发重新查询。DNS一般有都缓存，这一步的优化对请求的延迟来说至关重要，具体优化参考[DNS映射的文章](http://mrpeak.cn/ios/2016/01/22/dnsmapping)，配有可用的demo。


* 请求压缩
* 请求合并
* 请求的安全性 https,非对称加密
* 合理的并发数
* 可靠性保障

```
可靠性保障也是个容易被忽视的方面，在深入探讨之前，可以先将Request按业务属性分类。

第一类：关键核心的业务数据，期望能100%送达服务器。
第二类：重要内容请求，需要较高的请求成功率。
第三类：一般性内容请求，对成功率无要求。
```

* 多通道

现在不少有技术条件的团队都有自己的tcp长连接通道，技术再硬点的甚至配有UDP通道，UDP在丢包率高的网络环境下能极大的提高请求成功的概率。如果能同时具备HTTP，TCP，UDP三条网络通道，在某些场景下，如果不考虑流量（比如wifi），可以针对某个网络请求，两通道或者三通道齐发，对请求成功的速度和可靠性有明显的疗效，不过客户端和服务器都需要针对业务场景做去重。我工作过的一个IM App在发送消息的时候，就是Socket配合HTTP双通道工作。UDP在VOIP服务当中使用较多，不过据说淘宝这类大厂也部分启用了UDP。

* 网络环境监控

* 请求成功率监控


